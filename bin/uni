#!/usr/bin/env raku

use v6;

use App::Uni;

sub USAGE() {
    print Q:c:to/EOH/;
    Usage:
        {$*PROGRAM-NAME} -c ... # given list of strings, output each char
        {$*PROGRAM-NAME} -u ... # given list of hex codepoints, output each char
        {$*PROGRAM-NAME} -n ... # Search codepoint names given list of name fragments
        {$*PROGRAM-NAME} -w ... # Search codepoint names given list of words
        {$*PROGRAM-NAME} -s ... # given single character, output one char
        {$*PROGRAM-NAME} -v ... # given single character, output one char and properties
    EOH
}

# Force user to pass something
multi MAIN() { USAGE };

multi MAIN(*@input, :$c=False, :$u=False, :$w=False, :$s=False, :$n=False, :$v=False) {
    if $n or $w {
        uni-search(@input, :$w);
        exit 0;
    }
    if $s {
        say uni-gist(@input[0]);
        exit 0;
    }
    if $v {
        say uni-gist(@input[0], :verbose);
        exit 0;
    }
    if $u {
        for @input -> $code {
            my $codepoint = $code.parse-base(16);
            CATCH {
                say "Invalid codepoint: $code";
                next;
            }
            say uni-gist($code.parse-base(16));
        }
        exit 0;
    }
    if $c {
        for @input.kv -> $pos, $word {
            for $word.comb -> $char {
                say uni-gist($char);
            }
            say "" unless $pos == @input.elems-1
        }
        exit 0;
    } 

    if +@input == 1 and @input.chars == 1 {
        say uni-gist(@input[0]);
    } else {
        # TODO "with the exception that search terms comprised entirely of hex digits are allowed to match against the codepoint's numeric value"
        uni-search(@input);
    }
}
